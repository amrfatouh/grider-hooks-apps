create Accordion
  make an accordion that contains 3 question & answers
create Search
  make an input which receives a search term and returns with search results from wikipedia api and shows the results
create Dropdown
  make a dropdown which receives some options to show in the drop down
  it lets the parent know which option is selected
  when choosing an option, the dropdown collapses
  when clicking outside the dropdown, it also collapses
create Colors
  uses Dropdown to choose from a group of color
  it colors a text with the selected color
create Translation
  uses Dropdown to choose from a group of languages
  has a text input to take a text
  it sends the text to google translation api and shows the result


Accordion
  the Accordion should receive an array of items to be shown {title: xxx, content: xxx}
  it shows them with semantic-ui style
  store in the state of Accordion the active item
  when rendering the array, if the title of the item equals the title of active item, add active style class
  determing if you'd add active class or not using determineActive() function
    it takes an item and activeItem and determine the returned value accordingly
    it returns either an empty string or "active"
  on clicking in an entry, update the active entry
  if the activeItem is the same as the clicked item, set activeItem to null

Search
  make text input
  control it using state variable "term"
  make another state variable called "sentTerm"
  on changing the text input, update the "term"
  on updating the "term", set timeout to update the "sentTerm"
  return a cleaning up function from "term" useEffect that clears the timeout
  on updating "sentTerm", send a request to wikipedia api
  make results state variable that store data received from api
  on receiving the request, update results state variable
  show the results array below the text input

Colors
  make options array to be passed to Dropdown (array of {label: xxx, value: xxx})
  return the Dropdown an pass the options array to it
  make state variable "selected" and pass it and it set function to Dropdown
  also pass a label that would appear on the Dropdown

Dropdown
  it receives the previous parameters
  it render each option in a dropdown entry
  when an entry is clicked on, it updates the "selected" state variable
  when an entry is clicked on, the dropdown collapses
  when clicking on any other element, it also collapses
    add event listener when the element first renders to the body for clicks
    if the clicked element is inside the Dropdown, do nothing (use ref for that)
    else close the dropdown
    make a clear function for that

Translation
  same as Colors, pass label, options array, selectedLanguage, updateSelectedLanguage
  make an input and control it via state varialbe "term"
  also make a state variable "sentTerm" to store the term already sent
  on change of "term", set a timeout to update "sentTerm"
  make a clean up function for that
  when sentTerm or selectedLanguage are changed, send a request to translation api
  show the coming result 

Routing
  Link
    the component receives an href, children
    the component returns an anchor tag of the same href as the passed one
    received children are also passed to anchor tag
    on clicking on the anchor tag
      prevent default behaviour
      change the pathname
      dispatch a popstate event
  Route
    the component receives a path and children
    if the path equals the current pathname, it views the children
    it listens for a popstate event
    when an event is dispatched, it re-renders (just update a dummy state variable)
  Header
    consists of Links that point to corresponding path for each component